
public class KnapsackDP {

	public static void main(String[] args) {
		int n = 11;
		int[] val = {1, 4, 5, 7};
		int[] wt = {1, 3, 4, 5};
		
		int[][] dp = new int[val.length][n + 1];
		
		for(int i = 0; i < val.length; i++) {
			for(int j = 0; j <= n; j++) {
				if(j < wt[i]) {
					if(i > 0)
						dp[i][j] = dp[i - 1][j];
				}else {
					if(i > 0)
						dp[i][j] = Math.max(dp[i - 1][j], val[i] + dp[i - 1][j - wt[i]]);
					else
						dp[i][j] = val[i];
				}
				System.out.printf("%-3d", dp[i][j]);
			}
			System.out.println();
		}
		
		int row = val.length - 1, col = n;
		System.out.println("Take: ");
		
		while(col > 0 && row >= 0) {
			if(row != 0 && dp[row][col] == dp[row - 1][col])
				row--;
			else {
				System.out.println("Value: " + val[row] + ", Weight: " + wt[row]);
				col -= wt[row];
				row--;
			}
		}
		

	}

}
